### Login User
### This step is always necessary
### Normally every endpoint would check:
### 1.- x-api-key = Should be the same as defined API_KEY in .env
### 2.- Authorization = This token is returned when auth/login is called successfully
### 3.- Depending on the endpoint validations on user roles [user_entity.roles] will be done 
### Note: Authorization error would return 'Invalid Authorization', this is how the FE knows
### should request user to login again
# @name login
curl --location --request GET '{{base_url}}/user/auth/login' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'username: root' \
--header 'password: {{gigabyte_root_password}}' \
@BearerToken = '{{login.response.body.$.accessToken}}'
@UserId = '{{login.response.body.$.id}}'
 
### Generate Unit Fueling Report
curl --location --request POST '{{base_url}}/report/generate' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'x-user-id: {{UserId}}' \
--header 'Authorization: Bearer {{BearerToken}}' \
--data-raw '{    
    "type": "UnitFueling",
    "format": "ObjectArray",
    "startDate": "2022-11-08T00:00:00.000Z",
    "endDate": "2023-11-08T23:59:00.000Z"
}'

### Generate Unit Fueling Report in CSV
curl --location --request POST '{{base_url}}/report/generate' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'x-user-id: {{UserId}}' \
--header 'Authorization: Bearer {{BearerToken}}' \
--data-raw '{    
    "type": "UnitFueling",
    "format": "Csv"
}'

### Units Get All
# @name units
curl --location --request GET '{{base_url}}/unit' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'Authorization: Bearer {{BearerToken}}' \
@UnitId = '{{units.response.body.$.[0].id}}'

### Generate Unit Service Report
curl --location --request POST '{{base_url}}/report/generate' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'x-user-id: {{UserId}}' \
--header 'Authorization: Bearer {{BearerToken}}' \
--data-raw '{    
    "type": "UnitService",
    "format": "ObjectArray",
    "unitId": "{{UnitId}}" 
}'

### Generate Tech Service Report
curl --location --request POST '{{base_url}}/report/generate' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'x-user-id: {{UserId}}' \
--header 'Authorization: Bearer {{BearerToken}}' \
--data-raw '{    
    "type": "TechService",
    "format": "ObjectArray",
    "startDate": "2022-11-08T00:00:00.000Z",
    "endDate": "2023-11-08T23:59:00.000Z"
}'

### Generate Tech Service Report in CSV
curl --location --request POST '{{base_url}}/report/generate' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'x-user-id: {{UserId}}' \
--header 'Authorization: Bearer {{BearerToken}}' \
--data-raw '{    
    "type": "TechService",
    "format": "Csv",
    "startDate": "2022-11-08T00:00:00.000Z",
    "endDate": "2023-11-08T23:59:00.000Z"
}'