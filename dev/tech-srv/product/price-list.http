### Login User
### This step is always necessary
### Normally every endpoint would check:
### 1.- x-api-key = Should be the same as defined API_KEY in .env
### 2.- Authorization = This token is returned when auth/login is called successfully
### 3.- Depending on the endpoint validations on user roles [user_entity.roles] will be done 
### Note: Authorization error would return 'Invalid Authorization', this is how the FE knows
### should request user to login again
# @name login
curl --location --request GET '{{base_url}}/user/auth/login' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'username: root' \
--header 'password: {{gigabyte_root_password}}' \
@BearerToken = '{{login.response.body.$.accessToken}}'
@UserId = '{{login.response.body.$.id}}'
 
### Price Lists Get All
curl --location --request GET '{{base_url}}/tech-srv/price-list' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'Authorization: Bearer {{BearerToken}}' \

### Price List Create New
# @name priceList
curl --location --request POST '{{base_url}}/tech-srv/price-list' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'Authorization: Bearer {{BearerToken}}' \
--data-raw '{
    "name": "Price List Name {{$randomInt 0 9999999}}",
    "priority": {{$randomInt 1 5}},
    "comments": "No comments"
}'
@PriceListId = '{{priceList.response.body.$.id}}'

### Price List Get One
curl --location --request GET '{{base_url}}/tech-srv/price-list' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'Authorization: Bearer {{BearerToken}}' \
--header 'x-resource-id: {{PriceListId}}' \

### Update created Price List
curl --location --request PUT '{{base_url}}/tech-srv/price-list' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'Authorization: Bearer {{BearerToken}}' \
--data-raw '{
    "id": "{{PriceListId}}",
    "name": "Price List Name {{$randomInt 0 9999999}}",
    "priority": {{$randomInt 1 5}},
    "comments": "Updated price list comments"
}'

### Delete created price list
curl --location --request DELETE '{{base_url}}/tech-srv/price-list' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'x-resource-id: {{PriceListId}}' \
--header 'Authorization: Bearer {{BearerToken}}'