### Login User
### This step is always necessary
### Normally every endpoint would check:
### 1.- x-api-key = Should be the same as defined API_KEY in .env
### 2.- Authorization = This token is returned when auth/login is called successfully
### 3.- Depending on the endpoint validations on user roles [user_entity.roles] will be done 
### Note: Authorization error would return 'Invalid Authorization', this is how the FE knows
### should request user to login again
# @name login
curl --location --request GET '{{base_url}}/user/auth/login' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'username: root' \
--header 'password: {{gigabyte_root_password}}' \
@BearerToken = '{{login.response.body.$.accessToken}}'

### Units Get All
# @name units
curl --location --request GET '{{base_url}}/unit' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'Authorization: Bearer {{BearerToken}}' \
@UnitId = '{{units.response.body.$.[0].id}}'

### Assignations Get All
curl --location --request GET '{{base_url}}/admin/unit/assignation' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'Authorization: Bearer {{BearerToken}}' \

### Users Get All
# @name users
curl --location --request GET '{{base_url}}/user' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'Authorization: Bearer {{BearerToken}}' \
@UserId = '{{users.response.body.$.[0].id}}'

### Assignation Create New
# @name assignation
curl --location --request POST '{{base_url}}/admin/unit/assignation' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'Authorization: Bearer {{BearerToken}}' \
--data-raw '{
    "user": { "id": "{{UserId}}" },
    "unit": { "id": "{{UnitId}}" },
    "initOdometer": {{$randomInt 0 100000}},
    "assets": []
}'
@AssignationId = '{{assignation.response.body.$.id}}'

### Assignation Get All assignations By User
curl --location --request GET '{{base_url}}/admin/unit/assignation/by-user?all=true' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'Authorization: Bearer {{BearerToken}}' \
--header 'x-user-id: {{UserId}}' \

### Get current Assignation By User
# @name current
curl --location --request GET '{{base_url}}/admin/unit/assignation/by-user' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'Authorization: Bearer {{BearerToken}}' \
--header 'x-user-id: {{UserId}}' \
@CurrentAssignationId = '{{current.response.body.$.[0].id}}'

### Get current Assignation By Unit
# @name current
curl --location --request GET '{{base_url}}/admin/unit/assignation/by-unit' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'Authorization: Bearer {{BearerToken}}' \
--header 'x-resource-id: {{UnitId}}' \
@CurrentAssignationId = '{{current.response.body.$.[0].id}}'

### Cancel Assignation for User-Unit
curl --location --request PUT '{{base_url}}/admin/unit/assignation' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'Authorization: Bearer {{BearerToken}}' \
--header 'x-user-id: {{UserId}}' \
--data-raw '{    
    "id": "{{CurrentAssignationId}}",
    "status": "CANCELLED"
}'

### Finish Assignation for User-Unit
curl --location --request PUT '{{base_url}}/admin/unit/assignation' \
--header 'Content-Type: application/json' \
--header 'x-api-key: {{apiKey}}' \
--header 'Authorization: Bearer {{BearerToken}}' \
--header 'x-user-id: {{UserId}}' \
--data-raw '{    
    "id": "{{CurrentAssignationId}}",
    "status": "FINISHED"
}'
